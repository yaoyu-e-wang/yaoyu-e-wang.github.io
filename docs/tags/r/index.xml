<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Ananke</title>
    <link>https://yaoyu-e-wang.github.io/tags/r/</link>
    <description>Recent content in R on Ananke</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://yaoyu-e-wang.github.io/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>scRNASeq analysis with Seurat </title>
      <link>https://yaoyu-e-wang.github.io/posts/scrnaseq_seurat/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yaoyu-e-wang.github.io/posts/scrnaseq_seurat/</guid>
      <description>scRNASeq analysis with Seurat and other tools Seurat install The Seurat package will need to be installed. You can find further instructions for install found here. It is installed via a separate package manager (in R) Bioconductor and R&amp;rsquo;s package manager CRAN.
# Check if Bioconductor is installed. If not, install if (!requireNamespace(&amp;#34;BiocManager&amp;#34;, quietly = TRUE)) install.packages(&amp;#34;BiocManager&amp;#34;) # Install a necessary package for Seurat BiocManager::install(&amp;#39;multtest&amp;#39;) BiocManager::install(&amp;#39;MAST&amp;#39;) # Install Seurat install.packages(&amp;#39;Seurat&amp;#39;) Updating HTML index of packages in &#39;.</description>
    </item>
    
    <item>
      <title>Basic RNASeq DGE Analysis</title>
      <link>https://yaoyu-e-wang.github.io/posts/rnaseq_dge/</link>
      <pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yaoyu-e-wang.github.io/posts/rnaseq_dge/</guid>
      <description>Begin RNA-Seq DGE Analysis We first load the RNA-Seq count matrix from ‘RNASeqData.Rdata’. This is a simple 3 vs 3 RNA-Seq experiment with Control vs Experiment in count matrix by gene.
# One can set up the path # Set working directory to PROJECT_DIR setwd(&amp;quot;~/Dropbox (Harvard University)/qBRC-Share/Presentations/QBRC-Workshops/Intro to RNASeq Analysis/2022-0424-IID/RNASeq_Exploratory&amp;quot;) # setwd(&amp;quot;~/modules/rnaseq_dge/&amp;quot;) load(&#39;RNASeq_exploratory.RData&#39;) ls() # list all current variables ## [1] &amp;quot;count_data&amp;quot; &amp;quot;exploratory_results&amp;quot; &amp;quot;groups&amp;quot; #head(count_data) # The head(count_data) provides the first 6 row of the &#39;count_data&#39; #head(groups) # The head(count_data) provides the first 6 row of the &#39;count_data&#39; Principle component analysis Once the matrix is loaded, we can perform principle component analysis to visualize sample distribution.</description>
    </item>
    
    <item>
      <title>Data Wrangling with R Basics - 3</title>
      <link>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-3/</link>
      <pubDate>Tue, 26 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-3/</guid>
      <description>Data Wrangling with R Basics - 3 Let&amp;rsquo;s load the dataset
data=list( dge_results=read.table(&#39;scripts and data/data/differential_results.csv&#39;, sep=&#39;,&#39;, header=T), expr=read.table(&#39;scripts and data/data/gene_expression.tsv&#39;, header=T, row.names=1), # first column being the rowname annot=read.delim(&#39;scripts and data/data/gene_annotations.tsv&#39;) ) find genes with greater than 0 mean expression between a given chr coordinate Let’s find out mean first You can use rowMeans, rowMax, rowMin to determine means for a data matrix
expr_mean=rowMeans(data$expr) gene_expr=cbind(data$expr, mean=expr_mean) We can use the function subset to find the given with a given coordinate</description>
    </item>
    
    <item>
      <title>Data Wrangling with R Basics - 2</title>
      <link>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-2/</link>
      <pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-2/</guid>
      <description>Working with genomic data with R We provided 5 files in the Data directory: - differntial_results.csv - gene_expression.tsv - gene_annotations.tsv
my_pathway_genes.txt - mutations.tsv These files are stored in either comma-delimited (csv) or tab-delimited (tsv) formats. Files can be read with the following functions available from default R libraries. These are built-in “functions” from R. All read files, but with slightly different default behavior.
# setwd(&amp;quot;~/modules/data_wrangling&amp;quot;) # First, load all the data: print(&#39;Loading data.</description>
    </item>
    
    <item>
      <title>Data Wrangling with R Basics - 1</title>
      <link>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-1/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://yaoyu-e-wang.github.io/posts/datawranglingbasic-1/</guid>
      <description>The R syntax and Data Structre R is composed of the following syntax to describe the program: - variables that can be of any of R data types - operators operations that perform a arithematic or numerical action - functions a description of a series of operations to be performed - comments the # indicates comments that are not performed by R
Variables and Data types Variables are assignment names for a piece of information, such as data.</description>
    </item>
    
  </channel>
</rss>
